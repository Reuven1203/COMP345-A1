<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_dice" kind="class" language="C++" prot="public">
    <compoundname>Dice</compoundname>
    <includes refid="_dice_8h" local="no">Dice.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_dice_1af623f2b9433932f5d0d4d855eb3ec8d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class DiceTest</definition>
        <argsstring></argsstring>
        <name>DiceTest</name>
        <qualifiedname>Dice::DiceTest</qualifiedname>
        <param>
          <type><ref refid="class_dice_test" kindref="compound">DiceTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="34" column="18" bodyfile="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_dice_1aa7ec1a35d7132d3dec12afa4a905e07d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_roll" kindref="compound">Roll</ref></type>
        <definition>Roll Dice::parseRoll</definition>
        <argsstring>(std::string str)</argsstring>
        <name>parseRoll</name>
        <qualifiedname>Dice::parseRoll</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Internal method to parse a string into a <ref refid="struct_roll" kindref="compound">Roll</ref> struct. </para>
        </briefdescription>
        <detaileddescription>
<para>Parses roll string into <ref refid="struct_roll" kindref="compound">Roll</ref> struct to be easily used by <ref refid="class_dice_1a4b5adb8de2005855739bd66ba3b79290" kindref="member">Dice::roll()</ref> method, handles errors in input string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The roll string to parse. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="struct_roll" kindref="compound">Roll</ref> struct representing the parsed roll.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_dice" kindref="compound">Dice</ref> roll string to be parsed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_roll" kindref="compound">Roll</ref> struct consisting of int of dice to roll, DieType of type of die to roll, and int added to roll. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="42" column="10" bodyfile="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.cpp" bodystart="53" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_dice_1ad11d882fd5b27d53ef927a7d8a9f9325" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_dice_8h_1a230fe26a49ff11b10bb851e08f88d9d4" kindref="member">DieType</ref></type>
        <definition>DieType Dice::parseDie</definition>
        <argsstring>(std::string dieTypeStr, std::string str)</argsstring>
        <name>parseDie</name>
        <qualifiedname>Dice::parseDie</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>dieTypeStr</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Internal method to parse a die type string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dieTypeStr</parametername>
</parameternamelist>
<parameterdescription>
<para>The die type string to parse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The original roll string (used for error handling). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding DieType enum value.</para>
</simplesect>
@Brief Parses string to use the correct type of die <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dieTypeStr</parametername>
</parameternamelist>
<parameterdescription>
<para>String to be parsed into DieType </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_roll" kindref="compound">Roll</ref> str to be passed to error method if error found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>proper DieType according to parameter, or error and exit if dieTypeStr does not match any valid types of dice. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="51" column="13" bodyfile="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.cpp" bodystart="27" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_dice_1a2286e75e2cb76cf84b335c0140238abe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Dice::checkIfNumber</definition>
        <argsstring>(char c)</argsstring>
        <name>checkIfNumber</name>
        <qualifiedname>Dice::checkIfNumber</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="59" column="10" bodyfile="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.cpp" bodystart="129" bodyend="131"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_dice_1a222ad3efc4844a40a8f717dff00e32d9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dice::diceRollStringErr</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>diceRollStringErr</name>
        <qualifiedname>Dice::diceRollStringErr</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Output error message for invalid roll string. </para>
        </briefdescription>
        <detaileddescription>
<para>Output error string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The invalid roll string.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_roll" kindref="compound">Roll</ref> string that caused the error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>with offending string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="58" column="17" bodyfile="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_dice_1a898cd5b1af808873efac3d979645e775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Dice::Dice</definition>
        <argsstring>()=default</argsstring>
        <name>Dice</name>
        <qualifiedname>Dice::Dice</qualifiedname>
        <briefdescription>
<para>Default constructor. Constructs a <ref refid="class_dice" kindref="compound">Dice</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_dice_1a4b5adb8de2005855739bd66ba3b79290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Dice::roll</definition>
        <argsstring>(std::string rollString)</argsstring>
        <name>roll</name>
        <qualifiedname>Dice::roll</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>rollString</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_roll" kindref="compound">Roll</ref> dice based on the given roll string. </para>
        </briefdescription>
        <detaileddescription>
<para>Rolls dice according to rollString using <ref refid="namespace_random_1a96193c13c6d59d02b8bd0462a75415c2" kindref="member">Random::random()</ref> Mersenne Twister PRNG.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rollString</parametername>
</parameternamelist>
<parameterdescription>
<para>The roll string in format xdy[+z] or xdy+z. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The total roll value.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rollString</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_roll" kindref="compound">Roll</ref> string in format xdy[+z] or xdy+z which specifies how many times to roll which type of die, and final addition. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sum of dice rolled randomly according to param rollString </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="74" column="9" bodyfile="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.cpp" bodystart="108" bodyend="127"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for rolling dice. This class provides functionality to roll dice based on a given roll string. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" line="33" column="1" bodyfile="/Users/reuvenostrofsky/Library/Mobile Documents/com~apple~CloudDocs/Concordia/Winter 2024/Comp345/Assignments/COMP345-A1/Dice.h" bodystart="33" bodyend="75"/>
    <listofallmembers>
      <member refid="class_dice_1a2286e75e2cb76cf84b335c0140238abe" prot="private" virt="non-virtual"><scope>Dice</scope><name>checkIfNumber</name></member>
      <member refid="class_dice_1a898cd5b1af808873efac3d979645e775" prot="public" virt="non-virtual"><scope>Dice</scope><name>Dice</name></member>
      <member refid="class_dice_1a222ad3efc4844a40a8f717dff00e32d9" prot="private" virt="non-virtual"><scope>Dice</scope><name>diceRollStringErr</name></member>
      <member refid="class_dice_1af623f2b9433932f5d0d4d855eb3ec8d4" prot="private" virt="non-virtual"><scope>Dice</scope><name>DiceTest</name></member>
      <member refid="class_dice_1ad11d882fd5b27d53ef927a7d8a9f9325" prot="private" virt="non-virtual"><scope>Dice</scope><name>parseDie</name></member>
      <member refid="class_dice_1aa7ec1a35d7132d3dec12afa4a905e07d" prot="private" virt="non-virtual"><scope>Dice</scope><name>parseRoll</name></member>
      <member refid="class_dice_1a4b5adb8de2005855739bd66ba3b79290" prot="public" virt="non-virtual"><scope>Dice</scope><name>roll</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
